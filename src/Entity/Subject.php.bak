<?php

namespace App\Entity;

use App\Repository\SubjectRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

#[ORM\Entity(repositoryClass: SubjectRepository::class)]
class Subject
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column]
    private ?int $id = null;

    #[ORM\Column(length: 255)]
    private ?string $name = null;

    #[ORM\OneToMany(mappedBy: 'subject', targetEntity: SubjectGrade::class)]
    private Collection $subjectGrades;

    public function __construct()
    {
        $this->subjectGrades = new ArrayCollection();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * @return Collection<int, SubjectGrade>
     */
    public function getSubjectGrades(): Collection
    {
        return $this->subjectGrades;
    }

    public function addSubjectGrade(SubjectGrade $subjectGrade): self
    {
        if (!$this->subjectGrades->contains($subjectGrade)) {
            $this->subjectGrades->add($subjectGrade);
            $subjectGrade->setSubject($this);
        }

        return $this;
    }

    public function removeSubjectGrade(SubjectGrade $subjectGrade): self
    {
        if ($this->subjectGrades->removeElement($subjectGrade)) {
            // set the owning side to null (unless already changed)
            if ($subjectGrade->getSubject() === $this) {
                $subjectGrade->setSubject(null);
            }
        }

        return $this;
    }
	
    public static function loadValidatorMetadata(ClassMetadata $metadata)
    {
        $metadata->addPropertyConstraint('first_name', new NotBlank());
        $metadata->addPropertyConstraint('last_name', new NotBlank());
        $metadata->addPropertyConstraint('initials', new NotBlank());
		
        $metadata->addConstraint(new UniqueEntity([
            'fields' => 'registration_id',
        ]));
    }
}
